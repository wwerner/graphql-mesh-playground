{
  "openapi": "3.0.3",
  "info": {
    "title": "DeepL API",
    "description": "The DeepL API provides programmatic access to DeepL’s machine translation technology.",
    "termsOfService": "https://www.deepl.com/pro-license/",
    "contact": {
      "name": "DeepL - Contact us",
      "url": "https://www.deepl.com/contact-us"
    },
    "version": "2.0.0"
  },
  "externalDocs": {
    "description": "DeepL Pro - Plans and pricing",
    "url": "https://www.deepl.com/pro?cta=header-prices/"
  },
  "servers": [
    {
      "url": "https://api.deepl.com/v2",
      "description": "DeepL API Pro"
    },
    {
      "url": "https://api-free.deepl.com/v2",
      "description": "DeepL API Free"
    }
  ],
  "tags": [
    {
      "name": "TranslatingText",
      "description": "The text-translation API currently consists of a single endpoint, `translate`, which is described below."
    },
    {
      "name": "HandlingXML",
      "description": "By default, the translation engine does not take tags into account.\nBy setting the `tag_handling` parameter to `xml`, the API will process XML input by extracting text out of the structure,\nsplitting it into individual sentences, translating them, and placing them back into the XML structure.\n\nFor the translation of HTML content please see [Handling HTML (Beta)](https://www.deepl.com/docs-api/html) \n\nWe will look at the XML handling engine in the following cases:\n\n- Sentences with markup\n- Structured content\n- Restricting splitting\n- Disabling automatic outline detection\n- Splitting on newlines\n- Ignored text"
    },
    {
      "name": "HandlingHTML",
      "description": "By default, the translation engine does not take HTML tags into account.\nBy setting the `tag_handling` parameter to `html`, the API will process HTML input by extracting text\nout of the structure, splitting it into individual sentences, translating them, and placing them back\ninto the HTML structure.\nThis functionality is in beta. If you encounter issues, please let us know at support@DeepL.com.\n\nFor the translation of generic XML content please see [Handling XML](https://www.deepl.com/docs-api/xml)"
    },
    {
      "name": "TranslatingDocuments",
      "description": "The document translation API allows you to translate whole documents.\nTranslating a document usually involves three types of HTTP requests:\n- [upload](https://www.deepl.com/docs-api/documents/translate-document) the document to be translated,\n- periodically [check the status](https://www.deepl.com/docs-api/documents/get-document-status) of the document translation,\n- once the status call reports `done`, [download](https://www.deepl.com/docs-api/documents/download-document) the translated document.\n\nPlease note that with every submitted document of type .pptx, .docx, or .pdf,\nyou are billed a minimum of 50,000 characters with the DeepL API plan,\nno matter how many characters are included in the document."
    },
    {
      "name": "ManagingGlossaries",
      "description": "The *glossary* functions allow you to create, inspect, and delete glossaries.\nGlossaries created with the glossary function can be used in translate requests by specifying the\n`glossary_id` parameter.\nIf you encounter issues, please let us know at support@DeepL.com.\n\nCurrently, glossaries for the following language combinations are supported:\n\n- EN (English) → DE (German)\n- DE (German) → EN (English)\n- EN (English) → FR (French)\n- FR (French) → EN (English)\n- EN (English) → ES (Spanish)\n- ES (Spanish) → EN (English)\n- EN (English) → JA (Japanese)\n- JA (Japanese) → EN (English)\n- DE (German) → FR (French)\n- FR (French) → DE (German)\n\nThe maximum size limit for a glossary is 10 MiB = 10485760 bytes and each source/target text,\nas well as the name of the glossary, is limited to 1024 UTF-8 bytes.\nA total of 1000 glossaries are allowed per account.\n\n\nGlossaries created via the DeepL API are distinct from glossaries created via the DeepL website and DeepL apps.\nThis means API glossaries cannot be used on the website and vice versa."
    },
    {
      "name": "MetaInformation",
      "description": "Information about API usage and value ranges"
    }
  ],
  "paths": {
    "/translate": {
      "post": {
        "tags": [
          "TranslatingText"
        ],
        "summary": "Request Translation",
        "operationId": "translateText",
        "description": "The translate function.",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "examples": {
                "Basic": {
                  "summary": "Basic Example",
                  "value": {
                    "text": [
                      "Hello, world"
                    ],
                    "target_lang": "DE"
                  }
                },
                "Glossary": {
                  "summary": "Using a Glossary",
                  "value": {
                    "text": [
                      "Hello, world"
                    ],
                    "target_lang": "DE",
                    "source_lang": "EN",
                    "glossary_id": "[yourGlossaryId]"
                  }
                },
                "MultipleSentences": {
                  "summary": "Multiple Sentences",
                  "value": {
                    "text": [
                      "The table is green. The chair is black."
                    ],
                    "target_lang": "DE"
                  }
                },
                "LargeVolumes": {
                  "summary": "Large Volumes of Text",
                  "value": {
                    "text": [
                      "This is the first sentence.",
                      "This is the second sentence.",
                      "This is the third sentence."
                    ],
                    "target_lang": "DE"
                  }
                }
              },
              "schema": {
                "type": "object",
                "required": [
                  "text",
                  "target_lang"
                ],
                "properties": {
                  "text": {
                    "description": "Text to be translated. Only UTF-8-encoded plain text is supported. The parameter may be specified multiple times and translations are returned in the same order as they are requested. Each of the parameter values may contain multiple sentences. Up to 50 texts can be sent for translation in one request.",
                    "type": "array",
                    "maxItems": 50,
                    "items": {
                      "type": "string"
                    }
                  },
                  "source_lang": {
                    "type": "string",
                    "description": "Language of the text to be translated. Options currently available:\n * `BG` - Bulgarian\n * `CS` - Czech\n * `DA` - Danish\n * `DE` - German\n * `EL` - Greek\n * `EN` - English\n * `ES` - Spanish\n * `ET` - Estonian\n * `FI` - Finnish\n * `FR` - French\n * `HU` - Hungarian\n * `ID` - Indonesian\n * `IT` - Italian\n * `JA` - Japanese\n * `LT` - Lithuanian\n * `LV` - Latvian\n * `NL` - Dutch\n * `PL` - Polish\n * `PT` - Portuguese (all Portuguese varieties mixed)\n * `RO` - Romanian\n * `RU` - Russian\n * `SK` - Slovak\n * `SL` - Slovenian\n * `SV` - Swedish\n * `TR` - Turkish\n * `ZH` - Chinese\n\nIf this parameter is omitted, the API will attempt to detect the language of the text and translate it.",
                    "enum": [
                      "BG",
                      "CS",
                      "DA",
                      "DE",
                      "EL",
                      "EN",
                      "ES",
                      "ET",
                      "FI",
                      "FR",
                      "HU",
                      "ID",
                      "IT",
                      "JA",
                      "LT",
                      "LV",
                      "NL",
                      "PL",
                      "PT",
                      "RO",
                      "RU",
                      "SK",
                      "SL",
                      "SV",
                      "TR",
                      "ZH"
                    ]
                  },
                  "target_lang": {
                    "type": "string",
                    "description": "The language into which the text should be translated. Options currently available:\n * `BG` - Bulgarian\n * `CS` - Czech\n * `DA` - Danish\n * `DE` - German\n * `EL` - Greek\n * `EN` - English (unspecified variant for backward compatibility; please select `EN-GB` or `EN-US` instead)\n * `EN-GB` - English (British)\n * `EN-US` - English (American)\n * `ES` - Spanish\n * `ET` - Estonian\n * `FI` - Finnish\n * `FR` - French\n * `HU` - Hungarian\n * `ID` - Indonesian\n * `IT` - Italian\n * `JA` - Japanese\n * `LT` - Lithuanian\n * `LV` - Latvian\n * `NL` - Dutch\n * `PL` - Polish\n * `PT` - Portuguese (unspecified variant for backward compatibility; please select `PT-BR` or `PT-PT` instead)\n * `PT-BR` - Portuguese (Brazilian)\n * `PT-PT` - Portuguese (all Portuguese varieties excluding Brazilian Portuguese)\n * `RO` - Romanian\n * `RU` - Russian\n * `SK` - Slovak\n * `SL` - Slovenian\n * `SV` - Swedish\n * `TR` - Turkish\n * `ZH` - Chinese",
                    "enum": [
                      "BG",
                      "CS",
                      "DA",
                      "DE",
                      "EL",
                      "EN-GB",
                      "EN-US",
                      "ES",
                      "ET",
                      "FI",
                      "FR",
                      "HU",
                      "ID",
                      "IT",
                      "JA",
                      "LT",
                      "LV",
                      "NL",
                      "PL",
                      "PT-BR",
                      "PT-PT",
                      "RO",
                      "RU",
                      "SK",
                      "SL",
                      "SV",
                      "TR",
                      "ZH"
                    ]
                  },
                  "split_sentences": {
                    "description": "Sets whether the translation engine should first split the input into sentences. This is enabled by default. Possible values are:\n * `0` - no splitting at all, whole input is treated as one sentence\n * `1` - splits on punctuation and on newlines\n * `nonewlines` - splits on punctuation only, ignoring newlines\n\nFor applications that send one sentence per text parameter, it is advisable to set `split_sentences` to `0`, in order to prevent the engine from splitting the sentence unintentionally.\n\n\nPlease note that newlines will split sentences. You should therefore clean files to avoid breaking sentences or set the parameter `split_sentences` to `nonewlines`. In the example below, the two parts of the sentence have been translated separately and this has caused an error: The word \"the\" has been incorrectly translated as \"die\" (the feminine definite article in German), though the German word for \"sentence\", \"Satz\", is masculine (der Satz).\n * Example request:\n```\n<div>This is the first\nsentence.</div>\n```\n * Example response:\n```\n<div>Dies ist die erste\nSatz.</div>\n```",
                    "type": "string",
                    "enum": [
                      "0",
                      "1",
                      "nonewlines"
                    ],
                    "default": "1"
                  },
                  "preserve_formatting": {
                    "description": "Sets whether the translation engine should respect the original formatting, even if it would usually correct some aspects. Possible values are:\n * `0`\n * `1`\n\nThe formatting aspects affected by this setting include:\n * Punctuation at the beginning and end of the sentence\n * Upper/lower case at the beginning of the sentence",
                    "type": "string",
                    "enum": [
                      "0",
                      "1"
                    ],
                    "default": "0"
                  },
                  "formality": {
                    "description": "Sets whether the translated text should lean towards formal or informal language.\nThis feature currently only works for target languages\n`DE` (German),\n`FR` (French),\n`IT` (Italian),\n`ES` (Spanish),\n`NL` (Dutch),\n`PL` (Polish),\n`PT-PT`,\n`PT-BR` (Portuguese)\nand `RU` (Russian).\nPossible options are:\n  * `default`\n  * `more` - for a more formal language\n  * `less` - for a more informal language",
                    "type": "string",
                    "enum": [
                      "default",
                      "more",
                      "less"
                    ],
                    "default": "default"
                  },
                  "glossary_id": {
                    "description": "Specify the glossary to use for the translation. **Important:** This requires the `source_lang` parameter to be set and the language pair of the glossary has to match the language pair of the request.",
                    "type": "string"
                  },
                  "tag_handling": {
                    "description": "Sets which kind of tags should be handled. Options currently available:\n * `xml`: Enable XML tag handling; see [Handling XML](https://www.deepl.com/docs-api/xml).\n * `html`: Enable HTML tag handling; see [Handling HTML (Beta)](https://www.deepl.com/docs-api/html).",
                    "type": "string",
                    "enum": [
                      "xml",
                      "html"
                    ]
                  },
                  "non_splitting_tags": {
                    "description": "Comma-separated list of XML tags which never split sentences.\n\n\nFor some XML files, finding tags with textual content and splitting sentences using those tags won't yield the best results. The following example shows the engine splitting sentences on `par` tags and proceeding to translate the parts separately, resulting in an incorrect translation:\n * Example request:\n```\n<par>The firm said it had been </par><par> conducting an internal investigation.</par>\n```\n * Example response:\n```\n<par>Die Firma sagte, es sei eine gute Idee gewesen.</par><par> Durchführung einer internen Untersuchung.</par>\n```\n\n\nAs this can lead to bad translations, this type of structure should either be avoided, or the `non_splitting_tags` parameter should be set. The following example shows the same call, with the parameter set to `par`:\n * Example request:\n```\n<par>The firm said it had been </par><par> conducting an internal investigation.</par>\n```\n * Example response:\n```\n<par>Die Firma sagte, dass sie</par><par> eine interne Untersuchung durchgeführt</par><par> habe</par><par>.</par>\n```\n\n\nThis time, the sentence is translated as a whole. The XML tags are now considered markup and copied into the translated sentence. As the translation of the words \"had been\" has moved to another position in the German sentence, the two par tags are duplicated (which is expected here).",
                    "type": "string"
                  },
                  "outline_detection": {
                    "description": "The automatic detection of the XML structure won't yield best results in all XML files. You can disable this automatic mechanism altogether by setting the `outline_detection` parameter to `0` and selecting the tags that should be considered structure tags. This will split sentences using the `splitting_tags` parameter.\n\n\nIn the example below, we achieve the same results as the automatic engine by disabling automatic detection with `outline_detection=0` and setting the parameters manually to `tag_handling=xml`, `split_sentences=nonewlines`,  and `splitting_tags=par,title`.\n * Example request:\n\n\n    <document>\n      <meta>\n        <title>A document's title</title>\n      </meta>\n      <content>\n        <par>This is the first sentence. Followed by a second one.</par>\n        <par>This is the third sentence.</par>\n      </content>\n    </document>\n\n * Example response:\n\n\n    <document>\n      <meta>\n        <title>Der Titel eines Dokuments</title>\n      </meta>\n      <content>\n        <par>Das ist der erste Satz. Gefolgt von einem zweiten.</par>\n        <par>Dies ist der dritte Satz.</par>\n      </content>\n    </document>\n\n\nWhile this approach is slightly more complicated, it allows for greater control over the structure of the translation output.",
                    "type": "string",
                    "enum": [
                      "0"
                    ]
                  },
                  "splitting_tags": {
                    "description": "Comma-separated list of XML tags which always cause splits.\n\n\nSee the example in the `outline_detection` parameter's description.",
                    "type": "string"
                  },
                  "ignore_tags": {
                    "description": "Comma-separated list of XML tags that indicate text not to be translated.\n\n\nUse this paramter to ensure that elements in the original text are not altered in the translation (e.g., trademarks, product names) and insert tags into your original text. In the following example, the `ignore_tags` parameter is set to `keep`:\n * Example request:\n```\nPlease open the page <keep>Settings</keep> to configure your system.\n```\n * Example response:\n```\nBitte öffnen Sie die Seite <keep>Settings</keep> um Ihr System zu konfigurieren.\n```",
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "text": {
                  "style": "form",
                  "explode": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The translate function returns a JSON representation of the translations in the order the text parameters have been specified.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "translations": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "detected_source_language": {
                            "anyOf": [
                              {
                                "type": "string",
                                "description": "Language of the text to be translated. Options currently available:\n * `BG` - Bulgarian\n * `CS` - Czech\n * `DA` - Danish\n * `DE` - German\n * `EL` - Greek\n * `EN` - English\n * `ES` - Spanish\n * `ET` - Estonian\n * `FI` - Finnish\n * `FR` - French\n * `HU` - Hungarian\n * `ID` - Indonesian\n * `IT` - Italian\n * `JA` - Japanese\n * `LT` - Lithuanian\n * `LV` - Latvian\n * `NL` - Dutch\n * `PL` - Polish\n * `PT` - Portuguese (all Portuguese varieties mixed)\n * `RO` - Romanian\n * `RU` - Russian\n * `SK` - Slovak\n * `SL` - Slovenian\n * `SV` - Swedish\n * `TR` - Turkish\n * `ZH` - Chinese\n\nIf this parameter is omitted, the API will attempt to detect the language of the text and translate it.",
                                "enum": [
                                  "BG",
                                  "CS",
                                  "DA",
                                  "DE",
                                  "EL",
                                  "EN",
                                  "ES",
                                  "ET",
                                  "FI",
                                  "FR",
                                  "HU",
                                  "ID",
                                  "IT",
                                  "JA",
                                  "LT",
                                  "LV",
                                  "NL",
                                  "PL",
                                  "PT",
                                  "RO",
                                  "RU",
                                  "SK",
                                  "SL",
                                  "SV",
                                  "TR",
                                  "ZH"
                                ]
                              },
                              {
                                "description": "The language detected in the source text. It reflects the value of the `source_lang` parameter, when specified."
                              }
                            ]
                          },
                          "text": {
                            "description": "The translated text.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Basic": {
                    "value": {
                      "translations": [
                        {
                          "detected_source_language": "EN",
                          "text": "Hallo, Welt!"
                        }
                      ]
                    }
                  },
                  "Glossary": {
                    "value": {
                      "translations": [
                        {
                          "text": "Hallo, Welt!"
                        }
                      ]
                    }
                  },
                  "MultipleSentences": {
                    "value": {
                      "translations": [
                        {
                          "detected_source_language": "EN",
                          "text": "Der Tisch ist grün. Der Stuhl ist schwarz."
                        }
                      ]
                    }
                  },
                  "LargeVolumes": {
                    "value": {
                      "translations": [
                        {
                          "detected_source_language": "EN",
                          "text": "Das ist der erste Satz."
                        },
                        {
                          "detected_source_language": "EN",
                          "text": "Das ist der zweite Satz."
                        },
                        {
                          "detected_source_language": "EN",
                          "text": "Dies ist der dritte Satz."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Please check error message and your parameters."
          },
          "403": {
            "description": "Authorization failed. Please supply a valid `DeepL-Auth-Key` via the `Authorization` header."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "413": {
            "description": "The request size exceeds the limit."
          },
          "414": {
            "description": "The request URL is too long. You can avoid this error by using a POST request instead of a GET request, and sending the parameters in the HTTP body."
          },
          "429": {
            "description": "Too many requests. Please wait and resend your request."
          },
          "456": {
            "description": "Quota exceeded. The character limit has been reached."
          },
          "500": {
            "description": "Internal error."
          },
          "504": {
            "description": "Resource currently unavailable. Try again later."
          },
          "529": {
            "description": "Too many requests. Please wait and resend your request."
          }
        },
        "security": [
          {
            "auth_header": []
          }
        ]
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "MetaInformation"
        ],
        "summary": "Retrieve Supported Languages",
        "description": "Retrieve the list of languages that are currently supported for translation, either as source or target language, respectively.",
        "operationId": "getLanguages",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Sets whether source or target languages should be listed. Possible options are:\n * `source` (default): For languages that can be used in the `source_lang` parameter of [translate](https://www.deepl.com/docs-api/translating-text/translate-text) requests.\n * `target`: For languages that can be used in the `target_lang` parameter of [translate](https://www.deepl.com/docs-api/translating-text/translate-text) requests.",
            "schema": {
              "type": "string",
              "enum": [
                "source",
                "target"
              ],
              "default": "source"
            },
            "example": "target"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON array where each item represents a supported language.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "language",
                      "name"
                    ],
                    "properties": {
                      "language": {
                        "description": "The language code of the given language.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the language in English.",
                        "type": "string"
                      },
                      "supports_formality": {
                        "description": "Denotes formality support in case of a target language listing.",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "language": "BG",
                    "name": "Bulgarian",
                    "supports_formality": false
                  },
                  {
                    "language": "CS",
                    "name": "Czech",
                    "supports_formality": false
                  },
                  {
                    "language": "DA",
                    "name": "Danish",
                    "supports_formality": false
                  },
                  {
                    "language": "DE",
                    "name": "German",
                    "supports_formality": true
                  },
                  {
                    "language": "EL",
                    "name": "Greek",
                    "supports_formality": false
                  },
                  {
                    "language": "EN-GB",
                    "name": "English (British)",
                    "supports_formality": false
                  },
                  {
                    "language": "EN-US",
                    "name": "English (American)",
                    "supports_formality": false
                  },
                  {
                    "language": "ES",
                    "name": "Spanish",
                    "supports_formality": true
                  },
                  {
                    "language": "ET",
                    "name": "Estonian",
                    "supports_formality": false
                  },
                  {
                    "language": "FI",
                    "name": "Finnish",
                    "supports_formality": false
                  },
                  {
                    "language": "FR",
                    "name": "French",
                    "supports_formality": true
                  },
                  {
                    "language": "HU",
                    "name": "Hungarian",
                    "supports_formality": false
                  },
                  {
                    "language": "ID",
                    "name": "Indonesian",
                    "supports_formality": false
                  },
                  {
                    "language": "IT",
                    "name": "Italian",
                    "supports_formality": true
                  },
                  {
                    "language": "JA",
                    "name": "Japanese",
                    "supports_formality": false
                  },
                  {
                    "language": "LT",
                    "name": "Lithuanian",
                    "supports_formality": false
                  },
                  {
                    "language": "LV",
                    "name": "Latvian",
                    "supports_formality": false
                  },
                  {
                    "language": "NL",
                    "name": "Dutch",
                    "supports_formality": true
                  },
                  {
                    "language": "PL",
                    "name": "Polish",
                    "supports_formality": true
                  },
                  {
                    "language": "PT-BR",
                    "name": "Portuguese (Brazilian)",
                    "supports_formality": true
                  },
                  {
                    "language": "PT-PT",
                    "name": "Portuguese (European)",
                    "supports_formality": true
                  },
                  {
                    "language": "RO",
                    "name": "Romanian",
                    "supports_formality": false
                  },
                  {
                    "language": "RU",
                    "name": "Russian",
                    "supports_formality": true
                  },
                  {
                    "language": "SK",
                    "name": "Slovak",
                    "supports_formality": false
                  },
                  {
                    "language": "SL",
                    "name": "Slovenian",
                    "supports_formality": false
                  },
                  {
                    "language": "SV",
                    "name": "Swedish",
                    "supports_formality": false
                  },
                  {
                    "language": "TR",
                    "name": "Turkish",
                    "supports_formality": false
                  },
                  {
                    "language": "ZH",
                    "name": "Chinese",
                    "supports_formality": false
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request. Please check error message and your parameters."
          },
          "403": {
            "description": "Authorization failed. Please supply a valid `DeepL-Auth-Key` via the `Authorization` header."
          },
          "404": {
            "description": "The requested resource could not be found."
          },
          "413": {
            "description": "The request size exceeds the limit."
          },
          "429": {
            "description": "Too many requests. Please wait and resend your request."
          },
          "456": {
            "description": "Quota exceeded. The character limit has been reached."
          },
          "500": {
            "description": "Internal error."
          },
          "504": {
            "description": "Resource currently unavailable. Try again later."
          },
          "529": {
            "description": "Too many requests. Please wait and resend your request."
          }
        },
        "security": [
          {
            "auth_header": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "auth_header": {
        "type": "apiKey",
        "description": "Authentication with `Authorization` header and `DeepL-Auth-Key` authentication scheme",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}